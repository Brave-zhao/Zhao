############常规配置#####################

#启用custom配置
spring.profiles.active=dev

#数据库配置
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/controlserver?useSSL=false&serverTimezone=GMT%2B8&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#ds1,ds2 其他两个数据源
slave.datasource.names=ds1,ds2
#ds1
slave.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
slave.datasource.ds1.url=jdbc:mysql://localhost:3306/test1?useSSL=false&serverTimezone=GMT%2B8&characterEncoding=utf-8
slave.datasource.ds1.username=root
slave.datasource.ds1.password=root
#ds2
slave.datasource.ds2.driver-class-name=com.mysql.cj.jdbc.Driver
slave.datasource.ds2.url=jdbc:mysql://localhost:3306/test2?useSSL=false&serverTimezone=GMT%2B8&characterEncoding=utf-8
slave.datasource.ds2.username=root
slave.datasource.ds2.password=root


#配置cas单点登录(仅适用cas)
#cas.server-url-prefix: http://127.0.0.1:8080
#cas.server-login-url: http://127.0.0.1:8080/cas/login
#cas.client-host-url: http://127.0.0.1:6080
#cas.validation-type:cas

#cas和shiro整合
cas.server.url=${server.protocol}://${cas.ip}:${cas.port}/cas/
cas.client.url=${server.protocol}://${server.ip}:${server.port}
cas.client-name=controlServer

# 数据中心服务器配置
central.server.name=centralServer
central.server.url=${server.protocol}://${central.ip}:${central.port}/${central.server.name}/api
central.base.url=${server.protocol}://${central.ip}:${central.port}/${central.server.name}

# 本地服务器完整地址
server.url=${server.protocol}://${server.ip}:${server.port}${server.servlet.context-path}

# 预约系统服务器配置
appointment.server.name=
appointment.server.url=${server.protocol}://${appointment.ip}:${appointment.port}/${appointment.server.name}

# 考勤系统
attendance.server.name=attendance-data-statistics
attendance.server.url=${server.protocol}://${attendance.ip}:${attendance.port}/${attendance.server.name}

# 工位系统
cubicle.server.name=workCubicle
cubicle.server.url=${server.protocol}://${cubicle.ip}:${cubicle.port}/${cubicle.server.name}

#热部署生效
spring.devtools.restart.enabled= true
#设置重启的目录
spring.devtools.restart.additional-paths= src/main/java
# 定位模板的目录
spring.mvc.view.prefix=classpath:/templates/
# 给返回的页面添加后缀名
spring.mvc.view.suffix=.html
#不启用模板缓存
spring.thymeleaf.cache=false

# mybatis配置
mybatis.config-location=classpath:mybatis-config.xml
mybatis.mapper-locations=classpath:mapper/*.xml

#druid配置
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize = 5
spring.datasource.minIdle = 5
spring.datasource.maxActive = 20
spring.datasource.maxWait = 20000
spring.datasource.timeBetweenEvictionRunsMillis= 60000
spring.datasource.minEvictableIdleTimeMillis= 300000
spring.datasource.validationQuery= SELECT 1 FROM DUAL
spring.datasource.testWhileIdle= true
spring.datasource.testOnBorrow= false
spring.datasource.testOnReturn= false
spring.datasource.poolPreparedStatements= true

# session配置
session.timeout=180000
session.cookie-name=sid

# pageHelper配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true

#文件上传配置
#是否启用绝对路径，0：使用相对路径   1：使用绝对路径
upload.enableAbsolutePath=0
#文件上传文件存放目录，可以是绝对路径（需要配置启用绝对路径），也可以是相对路径（不需要配置）
upload.filepath=/WEB-INF/classes/static/upload
#使用绝对路径，需要配置网络能够访问到的路径前缀，使用相对路径则不需要配置该参数
upload.absoluteWebPath=/webpath
#文件上传相对访问路径（暂时用于启用相对路径的文件上传方式）
upload.accessPath=/public/upload
#路径前缀
upload.prefix=WEB-INF/classes/static/
#文件上传的大小限制
spring.servlet.multipart.max-file-size=512MB
spring.servlet.multipart.max-request-size=512MB

#是否开启net4000 TCP服务器,默认为false
netty.net.server.on=false
#是否开启心跳检测（超时则断开连接），默认为true
netty.heartbeat.on=true
#心跳检测超时时间（单位秒），默认120秒
netty.heartbeat.timeout=120
#net4000同步消息阻塞超时时间（单位秒），默认5秒，如果设置为0或者小于0，则在接收不到回复消息，一直处于阻塞状态
netty.net.message.sync.timeout=3
#net4000是否开启发送同步消息，在开启之后，消息发送会阻塞等待客户端返回结果，默认为false
netty.net.message.sync.on=false
#net4000TCP服务器端口，默认为13000
netty.net.server.port=13000

#power8TCP服务器端口，默认为2020
netty.power.server.port=2020

#是否开启power8 TCP服务器,默认为false
netty.power.server.on=false
#power8同步消息阻塞超时时间（单位秒），默认5秒，如果设置为0或者小于0，则在接收不到回复消息，一直处于阻塞状态
netty.power.message.sync.timeout=5
#power8是否开启发送同步消息，在开启之后，消息发送会阻塞等待客户端返回结果，默认为false
netty.power.message.sync.on=true

#是否开启红外传感器 TCP服务器,默认为false
netty.infrared.server.on=false
netty.infrared.server.port=15000

# ActiveMQ相关配置
spring.activemq.broker-url=tcp://192.168.2.146:61616
spring.activemq.user=system
spring.activemq.password=manager
spring.activemq.pool.max-connections=100
spring.activemq.pool.enabled=true
spring.activemq.pool.idle-timeout=30s
spring.activemq.packages.trust-all=true
spring.jms.pub-sub-domain=false
#
activemq.agdet.electricity-query.destination=agdet_electricity_query_queue
activemq.redelivery-policy.maximum-redeliveries=5
activemq.redelivery-policy.initial-redelivery-delay=1000
activemq.redelivery-policy.redelivery-delay=1000
activemq.redelivery-policy.use-exponential-back-off=true
activemq.redelivery-policy.back-off-multiplier=2.0
activemq.receiver.concurrency=4-8

##敏测相关配置
#请求地址
agdet.domain.api=https://energy.agdet.com/marketrentalapi/agdetmgd/interface.do
#商户号
agdet.merchantNo=MC191209001
#签名密钥
agdet.sign-key=9Jba10wHRN6uO4HCNFJfBCWGmZ5RkNCr
#加密密钥
agdet.encrypt-key=tKqbce3dP9ctq1HjBwapSEiD
#电量查询cron
agdet.schedule.electricity.query.cron=0 0/30 * * * ? 
#agdet.schedule.electricity.query.cron=0/30 * * * * ? 
#电量查询间隔(单位秒，与上面的cron表达式一致对应)
agdet.schedule.electricity.query.interval=1800

#mqtt服务器地址
mqtt.server.enable=true
mqtt.server.url=tcp://127.0.0.1:1883
mqtt.server.username=tenger
mqtt.server.password=@tenger703
#mqtt.server.url=tcp://47.112.192.91:1883
#mqtt.server.username=eastcatohb
#mqtt.server.password=kt88225618
#设置mqtt入站clientId
mqtt.inbound.client=control_consumer_${random.value}
#设置mqtt入站默认topic，多个用逗号分隔
mqtt.inbound.topic=topic1,topic2
#设置mqtt入站的qos，只设置一个的时候默认匹配全部topic，设置多个的时候匹配下标对应的topic
mqtt.inbound.qos=2,2
#设置mqtt出站clientId
mqtt.outbound.client=control_provider_${random.value}
#设置mqtt出站默认topic
mqtt.outbound.topic=topic1
#设置mqtt出站默认qos
mqtt.outbound.qos=2
#设置mqtt处理中控信息的topic
mqtt.handler.topic=topic2
#设置mqtt等待中控返回结果的超时时间(毫秒)
mqtt.handler.timeout=5000
#获取网关信息topic
#mqtt.inbound.topic.info=/sys/+/gateway/info
mqtt.inbound.topic.info=/sys/+/gateway/info
#获取网关信息topic匹配正则表达式
mqtt.inbound.pattern.info=/sys/[1-9|a-z|A-z]+/gateway/info
#获取网关信息qos
mqtt.inbound.qos.info=2
#获取子设备信息topic
mqtt.inbound.topic.ting-list-found=/sys/+/gateway/thing/list/found
#获取网关信息topic匹配正则表达式
mqtt.inbound.pattern.ting-list-found=/sys/[1-9|a-z|A-z]+/gateway/thing/list/found
#获取子设备信息qos
mqtt.inbound.qos.ting-list-found=2
#读取设备参数
mqtt.inbound.topic.ting-respond=/sys/+/gateway/thing/respond
#读取设备参数
mqtt.inbound.pattern.ting-respond=/sys/[1-9|a-z|A-z]+/gateway/thing/respond
#读取设备参数qos
mqtt.inbound.qos.ting-respond=2

#定时获取zigbee网关子设备信息周期（秒）
zigbee.equipment.timer.period=10
zigbee.equipment.timer.corn=*/10 * * * * ?
zigbee.log.timer.corn=*/10 * * * * ?

# Redis数据库索引（默认为0）
spring.redis.database=8
# Redis服务器地址
spring.redis.host=192.168.2.146
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接超时时间（毫秒）
spring.redis.timeout=10000

#websocket配置，在springboot项目中要使websocket生效，必须使用该配置，如果打包成war运行在tomcat，需要置为false
websocket.config=false

#是否开启空气开关相关功能，默认为true
eastcasto.gateway.enabled=true

#添加设备日志队列
equipment-log-add-queue=equipment_log_add_queue_bog

#班牌系统根路径
brand.url=http://192.168.2.99:6081/publish

#是否开启系统中控TCP服务器,默认为false
netty.system.server.on=false
#系统中控TCP服务器端口，默认为16000
netty.system.server.port=16000

#北京中控系统接口请求链接
beijing.control.enable=false
beijing.control.url=https://mock.mengxuegu.com/mock/617107d78b1b83659a2ef974
beijing.control.username=
beijing.control.password=

# 聚合(juhe.cn)相关key
juhe.api.key.ip=360bbef874104ac1fa4a2bb2512a49a1
juhe.api.key.weather=a6b728686a1a1e0b91fe7519d4362f73

# 定时任务核心线程数，设置为1则不开启异步
spring.task.scheduling.pool.size=20

#墨水屏图片下发超时重试延时队列
eink.publish.retry.queue=eink:publish:retry:queue

#墨水屏会议屏二维码链接
eink.screen.qrcode.url=${server.protocol}://${server.ip}:${server.port}/publish/third/place/qrcode?placeId={0}