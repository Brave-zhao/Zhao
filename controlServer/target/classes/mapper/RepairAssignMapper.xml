<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tenger.control.repair.dao.RepairAssignMapper">
  <resultMap id="BaseResultMap" type="com.tenger.control.repair.domain.RepairAssign">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="repair_id" jdbcType="BIGINT" property="repairId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="dep_id" jdbcType="BIGINT" property="depId" />
    <result column="is_sub" jdbcType="TINYINT" property="isSub" />
    <result column="deleted" jdbcType="BIGINT" property="deleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_repair_assign
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.tenger.control.repair.domain.RepairAssign">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_repair_assign (repair_id, user_id, dep_id, 
      is_sub, deleted, create_time, 
      update_time, tenant_id)
    values (#{repairId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{depId,jdbcType=BIGINT}, 
      #{isSub,jdbcType=TINYINT}, #{deleted,jdbcType=BIGINT}
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.tenger.control.repair.domain.RepairAssign">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_repair_assign
    set repair_id = #{repairId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      dep_id = #{depId,jdbcType=BIGINT},
      is_sub = #{isSub,jdbcType=TINYINT},
      deleted = #{deleted,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, repair_id, user_id, dep_id, is_sub, deleted, create_time, update_time, 
    tenant_id
    from tb_repair_assign
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, repair_id, user_id, dep_id, is_sub, deleted, create_time, update_time, 
    tenant_id
    from tb_repair_assign
  </select>

  <select id="selectByRepairId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT * FROM tb_repair_assign
    WHERE repair_id=#{repairId} AND deleted=0
  </select>

  <select id="selectByRepairIdAndIsSub" resultMap="BaseResultMap">
    SELECT * FROM tb_repair_assign
    WHERE repair_id=#{repairId}
    <if test="isSub">
      AND is_sub=1
    </if>
    <if test="!isSub">
      AND (ISNULL(is_sub) OR is_sub=0)
    </if>
    AND deleted=0
  </select>

  <insert id="insertList">
    INSERT into tb_repair_assign (repair_id, user_id, dep_id, is_sub) VALUES
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.repairId}, #{item.userId}, #{item.depId}, #{item.isSub})
    </foreach>
  </insert>

  <select id="selectByRepairIdAndDepIds" resultMap="BaseResultMap">
    SELECT * FROM tb_repair_assign
    WHERE repair_id=#{repairId}
    AND dep_id in (${depIds})
    AND deleted=0
  </select>

  <update id="deleteByRepairIdAndDepIds">
    UPDATE tb_repair_assign
    SET deleted=id
    WHERE repair_id=#{repairId}
    AND dep_id IN (${depIds})
  </update>

  <update id="deleteByRepairIdAndUserIds">
    UPDATE tb_repair_assign
    SET deleted=id
    WHERE repair_id=#{repairId}
      AND user_id IN (${userIds})
  </update>
</mapper>