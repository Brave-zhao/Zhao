<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tenger.control.dao.BackgroundMapper">
  <resultMap id="BaseResultMap" type="com.tenger.control.domain.Background">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="original_name" jdbcType="VARCHAR" property="originalName" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="real_path" jdbcType="VARCHAR" property="realPath" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="application" jdbcType="INTEGER" property="application" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_background
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tenger.control.domain.Background">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_background (original_name, url, real_path, 
      `type`, user_id, `application`
      )
    values (#{originalName,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{realPath,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{application,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.tenger.control.domain.Background">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_background
    set original_name = #{originalName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      real_path = #{realPath,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      `application` = #{application,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, original_name, url, real_path, `type`, user_id, `application`, create_time, 
    update_time, tenant_id
    from tb_background
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, original_name, url, real_path, `type`, user_id, `application`, create_time, 
    update_time, tenant_id
    from tb_background
  </select>
  
  <select id="listSystemByCondition" parameterType="com.tenger.control.domain.Background" resultMap="BaseResultMap">
  	SELECT * FROM tb_background
  	WHERE `type`=1
  	<if test="application != null">
  		AND `application`=#{application}
  	</if>
  </select>
  
  <select id="listCustomByCondition" parameterType="com.tenger.control.domain.Background" resultMap="BaseResultMap">
  	SELECT * FROM tb_background
  	WHERE `type`=2
  	<if test="application != null">
  		AND `application`=#{application}
  	</if>
  </select>
  
  <select id="searchCustomByCondition" parameterType="com.tenger.control.domain.Background" resultMap="BaseResultMap">
  	SELECT * FROM tb_background
  	WHERE `type`=2
  	<if test="background.application != null">
  		AND `application`=#{background.application}
  	</if>
  	
  	<if test="search != null and search != ''">
  		AND original_name LIKE #{search}
  	</if>
  </select>
</mapper>